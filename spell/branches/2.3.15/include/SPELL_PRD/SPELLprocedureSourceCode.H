// ################################################################################
// FILE       : SPELLprocedureSourceCode.H
// DATE       : Mar 17, 2011
// PROJECT    : SPELL
// DESCRIPTION: Procedure source code model
// --------------------------------------------------------------------------------
//
//  Copyright (C) 2008, 2012 SES ENGINEERING, Luxembourg S.A.R.L.
//
//  This file is part of SPELL.
//
// SPELL is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// SPELL is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with SPELL. If not, see <http://www.gnu.org/licenses/>.
//
// ################################################################################

#ifndef __SPELL_PROCEDURE_SRC_CODE_H__
#define __SPELL_PROCEDURE_SRC_CODE_H__

// FILES TO INCLUDE ////////////////////////////////////////////////////////
// System includes ---------------------------------------------------------
// Local includes ----------------------------------------------------------
// Project includes --------------------------------------------------------
#include "SPELL_UTIL/SPELLbase.H"

/** \addtogroup SPELL_PRD */
/*@{*/


// FORWARD REFERENCES //////////////////////////////////////////////////////
class SPELLprocedure;
// TYPES ///////////////////////////////////////////////////////////////////
// DEFINES /////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
/**
 ** \brief Model of a spell procedure source code.
 **
**////////////////////////////////////////////////////////////////////////////
class SPELLprocedureSourceCode
{
public: //--------------------------------------------------------------------

    // EXCEPTIONS ////////////////////////////////////////////////////////////
    // ENUMS /////////////////////////////////////////////////////////////////
    // TYPES /////////////////////////////////////////////////////////////////
    // LIFECYCLE /////////////////////////////////////////////////////////////

		//////////////////////////////////////////////////////////////////////
		/** Constructor
		 *
		 * \param filename IN: path to the procedure file
		**////////////////////////////////////////////////////////////////////
		SPELLprocedureSourceCode( const std::string filename )
		{
			m_filename = filename;
			m_source = "";
			m_sourceLines.clear();
		}

    // STATIC ////////////////////////////////////////////////////////////////
    // METHODS ///////////////////////////////////////////////////////////////

		//////////////////////////////////////////////////////////////////////
		/** Obtain the procedure file name.
		 *
		 * \returns The procedure file name.
		**////////////////////////////////////////////////////////////////////
		const std::string getFilename() const     {
			return m_filename;
		} ;

		//////////////////////////////////////////////////////////////////////
		/** Obtain the procedure source code.
		 *
		 * \returns The procedure source code.
		**////////////////////////////////////////////////////////////////////
		const std::string getSourceCode() const {
			return m_source;
		};

		//////////////////////////////////////////////////////////////////////
		/** Obtain the procedure source code lines.
		 *
		 * \returns The procedure source code lines.
		**////////////////////////////////////////////////////////////////////
		const std::vector<std::string> getSourceCodeLines() const {
			return m_sourceLines;
		};

    // DATA MEMBERS //////////////////////////////////////////////////////////

protected: //-----------------------------------------------------------------

		friend class SPELLprocedure;
		friend class SPELLlibrary;

    // EXCEPTIONS ////////////////////////////////////////////////////////////
    // ENUMS /////////////////////////////////////////////////////////////////
    // TYPES /////////////////////////////////////////////////////////////////
    // LIFECYCLE /////////////////////////////////////////////////////////////
    // METHODS ///////////////////////////////////////////////////////////////
    // DATA MEMBERS //////////////////////////////////////////////////////////

		//////////////////////////////////////////////////////////////////////
		/** Add procedure source code lines.
		 *
		 * \param sourceLine IN: text of the code line
		**////////////////////////////////////////////////////////////////////
		void addSourceCodeLine( const std::string& sourceLine )
		{
			m_source += sourceLine + "\n";
			m_sourceLines.push_back(sourceLine);
		};

		//////////////////////////////////////////////////////////////////////
		/** Clear procedure source code.
		**////////////////////////////////////////////////////////////////////
		void clear()
		{
			m_source = "";
			m_sourceLines.clear();
		};

private: //-------------------------------------------------------------------

    // EXCEPTIONS ////////////////////////////////////////////////////////////
    // ENUMS /////////////////////////////////////////////////////////////////
    // TYPES /////////////////////////////////////////////////////////////////
    // LIFECYCLE /////////////////////////////////////////////////////////////
    // METHODS ///////////////////////////////////////////////////////////////
    // DATA MEMBERS //////////////////////////////////////////////////////////
		/** Procedure file name */
		std::string m_filename;
		/** Procedure source code */
		std::string m_source;
		/** Procedure source code splitted in lines */
		std::vector<std::string> m_sourceLines;
};

/*@}*/
#endif
