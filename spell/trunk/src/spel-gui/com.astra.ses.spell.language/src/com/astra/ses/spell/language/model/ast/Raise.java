// Autogenerated AST node
package com.astra.ses.spell.language.model.ast;

import com.astra.ses.spell.language.model.SimpleNode;

public class Raise extends stmtType
{
	public exprType	type;
	public exprType	inst;
	public exprType	tback;
	public exprType	cause;

	public Raise(exprType type, exprType inst, exprType tback, exprType cause)
	{
		this.type = type;
		this.inst = inst;
		this.tback = tback;
		this.cause = cause;
	}

	public Raise(exprType type, exprType inst, exprType tback, exprType cause,
	        SimpleNode parent)
	{
		this(type, inst, tback, cause);
		this.beginLine = parent.beginLine;
		this.beginColumn = parent.beginColumn;
	}

	public String toString()
	{
		StringBuffer sb = new StringBuffer("Raise[");
		sb.append("type=");
		sb.append(dumpThis(this.type));
		sb.append(", ");
		sb.append("inst=");
		sb.append(dumpThis(this.inst));
		sb.append(", ");
		sb.append("tback=");
		sb.append(dumpThis(this.tback));
		sb.append(", ");
		sb.append("cause=");
		sb.append(dumpThis(this.cause));
		sb.append("]");
		return sb.toString();
	}

	public Object accept(VisitorIF visitor) throws Exception
	{
		return visitor.visitRaise(this);
	}

	public void traverse(VisitorIF visitor) throws Exception
	{
		if (type != null) type.accept(visitor);
		if (inst != null) inst.accept(visitor);
		if (tback != null) tback.accept(visitor);
		if (cause != null) cause.accept(visitor);
	}

}
