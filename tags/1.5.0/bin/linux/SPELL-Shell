#!/bin/sh
###############################################################################
#  Copyright (C) 2008, 2010 SES ENGINEERING, Luxembourg S.A.R.L.
#
# This file is part of SPELL.
#
# SPELL is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# SPELL is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with SPELL. If not, see <http://www.gnu.org/licenses/>.
#
# FILE: Startup script for SPEL Shell
#
# DATE: 24/11/2008
#
###############################################################################

#===============================================================================
# Setup main environment variables
#===============================================================================

# SPELL home
if [[ -z "$SPELL_HOME" ]]
then
    echo "ERROR: SPELL_HOME environment variable not defined"
    exit 1
fi
echo "SPELL Home: $SPELL_HOME" 

# SPELL cots
if [[ -z "$SPELL_COTS" ]]
then
    echo "ERROR: SPELL_COTS environment variable is not defined"
    exit 1
fi
echo "SPELL COTS: $SPELL_COTS"

# SPELL user data
if [[ -z "$SPELL_DATA" ]]
then
    echo "[!] WARNING: SPELL_DATA variable not defined, using default" 
    export SPELL_DATA=$SPELL_HOME/data
fi
echo "SPELL data: $SPELL_DATA"

# SPELL config
if [[ -z "$SPELL_CONFIG" ]]
then
    echo "[!] WARNING: SPELL_CONFIG variable not defined, using default" 
    export SPELL_CONFIG=$SPELL_HOME/config
fi
echo "SPELL config: $SPELL_CONFIG"

# SPELL runtime data
if [[ -z "$SPELL_SYS_DATA" ]]
then
    echo "[!] WARNING: SPELL_SYS_DATA variable not defined, using default" 
    export SPELL_SYS_DATA=$SPELL_HOME/data
fi
echo "SPELL runtime: $SPELL_SYS_DATA"
RUNTIME=$SPELL_SYS_DATA/Runtime

# SPELL logs
if [[ -z "$SPELL_LOG" ]]
then
    echo "[!] WARNING: SPELL_LOG variable not defined, using default" 
    export SPELL_LOG=$SPELL_HOME/log
fi
echo "SPELL log: $SPELL_LOG"

#===============================================================================
# Setup environment variables
#===============================================================================

NF=`find $SPELL_HOME -name ".svn" | wc -l`
if [[ $NF > 0 ]] 
then
    source $RUNTIME/environment_svn.sh
else
    source $RUNTIME/environment.sh
fi

# For this launcher
CLEANUP_AND_EXIT=""
ENABLE_LOG=""
PROC_NAME=""
CTX_NAME=""
INTERACTIVE_OPTION="-i"

#===============================================================================
# Launcher configuration
#===============================================================================
APP_PATH="-i ${SPELL_HOME}/spell/spell/lang/shell.py"
CFG_PATH="${SPELL_CONFIG}/server/test_config.xml"
UPD_PATH="$PYTHON ${SPELL_HOME}/utils/update/checkupd.py"

#===============================================================================
# Prerequisites
#===============================================================================
[ ! -d ${SPELL_LOG} ] && mkdir ${SPELL_LOG}

cd ${SPELL_HOME}

#===============================================================================
# Update installation from SVN if applicable
#===============================================================================
NF=`find $SPELL_HOME -name ".svn" | wc -l`
if [[ $NF > 0 ]]
then
    if [[ -f $UPD_PATH ]]
    then
        echo "#########################################################"
        echo "Updating installation from repository, please wait"
        echo "#########################################################"
        echo
        $UPD_PATH 
        echo
        echo "#########################################################"
        echo "Done, running application"
        echo "#########################################################"
    fi
fi

#===============================================================================
# Execute application
#===============================================================================
cd ${SPELL_HOME}
while getopts c:n:p:les OPTION
do
    case $OPTION in
        c) CFG_PATH="-$OPTION$OPTARG"
           ;;
        n) CTX_NAME="-$OPTION$OPTARG"
           ;;
        p) PROC_NAME="-$OPTION$OPTARG"
           ;;
        l) ENABLE_LOG="-$OPTION"
           ;;
        e) INTERACTIVE_OPTION=""
           CLEANUP_AND_EXIT="-e"
           ;;
        s) OPTION_S="-$OPTION"
           ;;
    esac
done
if [[ ${CTX_NAME} == "" ]]
then
   ${PYTHON} ${INTERACTIVE_OPTION} ${APP_PATH} ${CFG_PATH} ${PROC_NAME} ${ENABLE_LOG} ${CLEANUP_AND_EXIT} ${OPTION_S}
else
   ${PYTHON} ${INTERACTIVE_OPTION} ${APP_PATH} ${CFG_PATH} "${CTX_NAME}" ${PROC_NAME} ${ENABLE_LOG} ${CLEANUP_AND_EXIT} ${OPTION_S}
fi
